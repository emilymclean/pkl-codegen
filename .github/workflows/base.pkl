open module base
extends "package://github.com/emilymclean/pkl-github-actions/releases/download/v0.1.0-alpha.96/pkl-github-actions@0.1.0-alpha.96#/actions.pkl"

function dockerBuild(dir: String, ifStatement: String?, tags: String, push: Boolean, load: Boolean): Listing = new Listing {
    new ActionStep {
        name = "Build and push Docker image"
        uses = "docker/build-push-action@v4"
        `if` = ifStatement
        with = new Mapping {
            ["context"] = dir
            ["platforms"] = "linux/amd64"
            ["push"] = push
            ["load"] = load
            ["tags"] = tags
        }
    }
}

function dockerSetup(): Listing = new Listing {
    new ActionStep {
        name = "Setup QEMU"
        uses = "docker/setup-qemu-action@v2"
    }
    new ActionStep {
        name = "Setup Docker Buildx"
        uses = "docker/setup-buildx-action@v2"
    }
    new ActionStep {
        name = "Log in to the Container registry"
        uses = "docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9"
        with = new Mapping {
            ["registry"] = "https://ghcr.io"
            ["username"] = "${{ github.actor }}"
            ["password"] = "${{ secrets.GITHUB_TOKEN }}"
        }
    }
}

function renderForPlatform(platform: String, version: String): ActionStep = if (platform == "swift")
    new ActionStep {
        name = "Render template.Dockerfile"
        uses = "recih/template-render-action@v1.0.2"
        env = new Mapping {
            ["pkl_version"] = version
        }
        with = new Mapping {
            ["template-file"] = "swift/template.Dockerfile"
            ["output-file"] = "swift/Dockerfile"
            ["engine"] = "mustache"
        }
    } else
    new ActionStep {
        name = "Render build.template.gradle"
        uses = "recih/template-render-action@v1.0.2"
        env = new Mapping {
            ["pkl_version"] = version
        }
        with = new Mapping {
            ["template-file"] = "\(platform)/project/build.template.gradle"
            ["output-file"] = "\(platform)/project/build.gradle"
            ["engine"] = "mustache"
        }
    }