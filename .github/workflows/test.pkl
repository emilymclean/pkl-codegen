amends "package://github.com/emilymclean/pkl-github-actions/releases/download/v0.1.0-alpha.96/pkl-github-actions@0.1.0-alpha.96#/actions.pkl"
import "base.pkl"

local platforms = List("swift", "java", "kotlin", "doc")

local generalExtraFiles = new Listing<String> {}.toList()

local docExtraFiles = new Listing<String> {
    "/data/doc-package-info.pkl"
}.toList()

local function testString(platform: String, extraFiles: List<String>): String = """
docker run --rm -v "./test-data/:/data" test/\(platform):latest /data/example.pkl "/data/example space.pkl" \(if(extraFiles.length > 0) extraFiles.join(" ") else "") /data/example.out
ls test-data
ls test-data/example.out
"""

local function testPlatform(platform: String): Job = new Job {
    steps = (
        new Listing {
            base.checkout
            base.renderForPlatform(platform, base.currentVersion)
        }.toList() +
        base.dockerSetup().toList() +
        base.dockerBuild(
            new Mapping {
                ["context"] = platform
                ["platforms"] = "linux/amd64"
                ["load"] = true
                ["tags"] = """
                test/\(platform):latest
                """
            },
            null
        ).toList() +
        new Listing {
            if (platform != "doc")
                new CommandStep {
                    run = testString(platform, generalExtraFiles)
                }
            else
                new CommandStep {
                    run = testString(platform, docExtraFiles)
                }
        }.toList()
    ).toListing()
}

name = "Test Java, Kotlin, and Swift Docker images on latest version"

on = new On {
    pull_request = new PullRequest {
        branches = new Listing {
            "main"
            "develop"
        }
    }
}

jobs = new Mapping {
    for (platform in platforms) {
        ["test-\(platform)"] = testPlatform(platform)
    }
}.toMap().filter((k,v) -> v != null).toMapping()

