name: Build

on:
  push:
    branches: [ master, main, develop ]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.6
        with:
          versionSpec: '5.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.6
        with:
          useConfigFile: true
          configFilePath: ./gitversion.yml
      - name: Display SemVer
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
  release:
    runs-on: ubuntu-latest
    needs: version
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version.outputs.version }}
          release_name: Release ${{ needs.version.outputs.version }}
          draft: false
          prerelease: ${{ github.ref == 'refs/heads/develop' }}
  pkl-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ env.versions }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: |
          mapfile -t pklversions < "pkl-versions"
          json=$(jq -n --argjson arr "$(printf '%s\n' "${pklversions[@]}" | jq -R . | jq -s .)" '{"version": $arr}')
          echo "versions=$(echo "$json")" >> ${GITHUB_ENV}
  build-java:
    runs-on: ubuntu-latest
    needs: 
      - version
      - pkl-versions
    strategy:
      matrix: ${{fromJson(needs.pkl-versions.outputs.versions)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Render build.template.gradle
        uses: recih/template-render-action@v1.0.2
        env:
          pkl_version: ${{ matrix.version }}
        with:
          template-file: java/project/build.template.gradle
          output-file: java/project/build.gradle
          engine: mustache
      - name: Lowercase Repository
        run: |
          echo "REPOSITORY_LC=${REPOSITORY,,}" >>${GITHUB_ENV}
        env:
          REPOSITORY: '${{ github.repository }}'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        if: github.ref == 'refs/heads/main'
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ env.REPOSITORY_LC }}/java:${{ matrix.version }}
            ghcr.io/${{ env.REPOSITORY_LC }}/java:${{ matrix.version }}-${{ needs.version.outputs.version }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        if: github.ref == 'refs/heads/main'
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ env.REPOSITORY_LC }}/java:${{ matrix.version }}-${{ needs.version.outputs.version }}