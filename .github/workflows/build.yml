name: Build Java, Kotlin, and Swift Docker images
'on':
  push:
    branches:
    - main
    - develop
permissions:
  contents: write
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.6
      with:
        versionSpec: 5.x
    - id: gitversion
      name: Use GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.6
      with:
        useConfigFile: true
        configFilePath: ./gitversion.yml
    - name: Generate Job Summary
      run: |-
        echo "# Version Info
        Semantic Version: ${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_STEP_SUMMARY
  release:
    permissions:
      contents: write
    needs:
    - version
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: actions/create-release@v1
      with:
        tag_name: v${{ needs.version.outputs.version }}
        release_name: Release ${{ needs.version.outputs.version }}
        draft: false
        prerelease: ${{ github.ref == 'refs/heads/develop' }}
  pkl-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ env.versions }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - run: |-
        mapfile -t pklversions < "pkl-versions"
        json=$(jq -n -c --argjson arr "$(printf '%s
        ' "${pklversions[@]}" | jq -R . | jq -s .)" '{"version": $arr}')
        echo "versions=$(echo "$json")" >> ${GITHUB_ENV}
  build-java:
    permissions:
      contents: read
      packages: write
    needs:
    - version
    - pkl-versions
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.pkl-versions.outputs.versions)}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Render build.template.gradle
      env:
        pkl_version: ${{ matrix.version }}
      uses: recih/template-render-action@v1.0.2
      with:
        template-file: java/project/build.template.gradle
        output-file: java/project/build.gradle
        engine: mustache
    - name: Lowercase repository name
      env:
        REPOSITORY: ${{ github.repository }}
      run: echo "REPOSITORY_LC=${REPOSITORY,,}" >> ${GITHUB_ENV}
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: https://ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: java
        platforms: linux/amd64,linux/arm64/v8
        push: true
        tags: |-
          ghcr.io/${{ env.REPOSITORY_LC }}-java:${{ matrix.version }}
          ghcr.io/${{ env.REPOSITORY_LC }}-java:${{ matrix.version }}-${{ needs.version.outputs.version }}
    - name: Build and push Docker image
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: java
        platforms: linux/amd64,linux/arm64/v8
        push: true
        tags: ghcr.io/${{ env.REPOSITORY_LC }}-java:${{ matrix.version }}-${{ needs.version.outputs.version }}
  build-kotlin:
    permissions:
      contents: read
      packages: write
    needs:
    - version
    - pkl-versions
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.pkl-versions.outputs.versions)}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Render build.template.gradle
      env:
        pkl_version: ${{ matrix.version }}
      uses: recih/template-render-action@v1.0.2
      with:
        template-file: kotlin/project/build.template.gradle
        output-file: kotlin/project/build.gradle
        engine: mustache
    - name: Lowercase repository name
      env:
        REPOSITORY: ${{ github.repository }}
      run: echo "REPOSITORY_LC=${REPOSITORY,,}" >> ${GITHUB_ENV}
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: https://ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: kotlin
        platforms: linux/amd64,linux/arm64/v8
        push: true
        tags: |-
          ghcr.io/${{ env.REPOSITORY_LC }}-kotlin:${{ matrix.version }}
          ghcr.io/${{ env.REPOSITORY_LC }}-kotlin:${{ matrix.version }}-${{ needs.version.outputs.version }}
    - name: Build and push Docker image
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: kotlin
        platforms: linux/amd64,linux/arm64/v8
        push: true
        tags: ghcr.io/${{ env.REPOSITORY_LC }}-kotlin:${{ matrix.version }}-${{ needs.version.outputs.version }}
  build-swift:
    permissions:
      contents: read
      packages: write
    needs:
    - version
    - pkl-versions
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.pkl-versions.outputs.versions)}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Render template.Dockerfile
      env:
        pkl_version: ${{ matrix.version }}
      uses: recih/template-render-action@v1.0.2
      with:
        template-file: swift/template.Dockerfile
        output-file: swift/Dockerfile
        engine: mustache
    - name: Lowercase repository name
      env:
        REPOSITORY: ${{ github.repository }}
      run: echo "REPOSITORY_LC=${REPOSITORY,,}" >> ${GITHUB_ENV}
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: https://ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: swift
        platforms: linux/amd64,linux/arm64/v8
        push: true
        tags: |-
          ghcr.io/${{ env.REPOSITORY_LC }}-swift:${{ matrix.version }}
          ghcr.io/${{ env.REPOSITORY_LC }}-swift:${{ matrix.version }}-${{ needs.version.outputs.version }}
    - name: Build and push Docker image
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: swift
        platforms: linux/amd64,linux/arm64/v8
        push: true
        tags: ghcr.io/${{ env.REPOSITORY_LC }}-swift:${{ matrix.version }}-${{ needs.version.outputs.version }}
